options:
  parameters:
    author: Paulo Dutra - PU4THZ
    catch_exceptions: 'True'
    category: Custom
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: PLL Demo
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: top_block
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Gr-DDPLL Demo
    window_size: 1280, 1024
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 6]
    rotation: 0
    state: enabled

blocks:
- name: baud
  id: variable
  parameters:
    comment: ''
    value: '4800'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [256, 6]
    rotation: 0
    state: enabled
- name: const
  id: variable_constellation
  parameters:
    comment: ''
    const_points: '[-1-1j, -1+1j, 1+1j, 1-1j] + [3*np.exp(2j*np.pi*i/12) for i in
      range(12)]'
    dims: '1'
    normalization: digital.constellation.AMPLITUDE_NORMALIZATION
    precision: '8'
    rot_sym: '4'
    soft_dec_lut: None
    sym_map: '[i for i in range(16)]'
    type: 16qam
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [472, 8.0]
    rotation: 0
    state: true
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '48000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [168, 6]
    rotation: 0
    state: enabled
- name: sps
  id: variable
  parameters:
    comment: ''
    value: int(samp_rate/baud)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [328, 4]
    rotation: 0
    state: enabled
- name: variable0
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: Bw
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '50'
    step: '1'
    stop: '500'
    value: '100'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [168, 80.0]
    rotation: 0
    state: true
- name: variable1
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: Damp
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0.1'
    step: '0.05'
    stop: '2.0'
    value: '1'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [280, 80.0]
    rotation: 0
    state: true
- name: analog_random_source_x_0
  id: analog_random_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    max: '255'
    maxoutbuf: '0'
    min: '0'
    minoutbuf: '0'
    num_samps: '4096'
    repeat: 'True'
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 312.0]
    rotation: 0
    state: enabled
- name: blocks_null_sink_0
  id: blocks_null_sink
  parameters:
    affinity: ''
    alias: ''
    bus_structure_sink: '[[0,],]'
    comment: ''
    num_inputs: '1'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 488.0]
    rotation: 180
    state: true
- name: blocks_throttle_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 336.0]
    rotation: 0
    state: true
- name: channels_channel_model_0
  id: channels_channel_model
  parameters:
    affinity: ''
    alias: ''
    block_tags: 'False'
    comment: ''
    epsilon: '1.0'
    freq_offset: '0.0001'
    maxoutbuf: '0'
    minoutbuf: '0'
    noise_voltage: 1/4
    seed: '0'
    taps: 1.0 + 0.0j
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [816, 296.0]
    rotation: 0
    state: true
- name: digital_constellation_modulator_0
  id: digital_constellation_modulator
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: const
    differential: 'True'
    excess_bw: '0.5'
    log: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_symbol: sps
    truncate: 'False'
    verbose: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 312.0]
    rotation: 0
    state: true
- name: digital_symbol_sync_xx_0
  id: digital_symbol_sync_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: const.base()
    damping: '1.0'
    loop_bw: '0.045'
    max_dev: '1.5'
    maxoutbuf: '0'
    minoutbuf: '0'
    nfilters: '32'
    osps: '1'
    pfb_mf_taps: firdes.root_raised_cosine(32, 32, sps, 0.5, 11*sps*32)
    resamp_type: digital.IR_MMSE_8TAP
    sps: sps
    ted_gain: '1.0'
    ted_type: digital.TED_GARDNER
    type: cc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [560, 432.0]
    rotation: 180
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr, digital\n\nclass blk(gr.sync_block):\
      \  # other base classes are basic_block, decim_block, interp_block\n    \"\"\
      \"\n    Decision Directed PLL - Decision Directed based carrier recovery pll\n\
      \n    Parameters:\n        bw - Loop Bandwith (default = 2*pi/100)\n       \
      \ damp - Loop Damping (default = 1.0)\n        const - Slicer Constellation\
      \ (default = BPSK)\n    \"\"\"\n\n    def __init__(self, bw=0.0628, damp=1.0,\
      \ const=digital.bpsk_constellation()):  # only default arguments here\n    \
      \    \"\"\"arguments to this function show up as parameters in GRC\"\"\"\n \
      \       gr.sync_block.__init__(\n            self,\n            name='Decision\
      \ Directed PLL',   # will show up in GRC\n            in_sig=[np.complex64],\n\
      \            out_sig=[np.complex64, np.float32]\n        )\n        self.bw\
      \ = bw\n        self.damp = damp\n\n        self.phase = 0\n        self.freq\
      \ = 0\n        self.prevgains = [0,0]\n        self.slicer_const = const.points()\n\
      \n        self.denom = (len(self.slicer_const) + 2 * self.damp * self.bw + self.bw\
      \ * self.bw)\n        self.alpha = (4 * self.damp * self.bw) /  self.denom\n\
      \        self.beta = (4 * self.bw * self.bw) / self.denom\n\n    def Decision(self,\
      \ symbol):\n        return self.slicer_const[np.argmin(np.abs(self.slicer_const\
      \ - symbol))]\n\n    def updateGains(self):\n        self.denom = (len(self.slicer_const)\
      \ + 2 * self.damp * self.bw + self.bw * self.bw) \n        self.alpha = (4 *\
      \ self.damp * self.bw) /  self.denom\n        self.beta = (4 * self.bw * self.bw)\
      \ / self.denom\n        self.phase = 0\n        self.freq = 0\n\n    def work(self,\
      \ input_items, output_items):\n        inputs =  input_items[0]\n        outputs\
      \ = output_items[0]\n        errors = output_items[1]\n\n        if(self.prevgains[0]\
      \ != self.bw or self.prevgains[1] != self.damp):\n            self.prevgains\
      \ = [self.bw*1, self.damp*1]\n            self.updateGains()\n\n        for\
      \ i in range(len(inputs)):\n            out = inputs[i] * np.exp(-1j*self.phase)\n\
      \            error = (out * np.conj(self.Decision(out))).imag\n            self.freq\
      \ += self.beta * error\n            self.phase += self.freq + self.alpha * error\n\
      \            self.phase = (np.pi + self.phase) % (2*np.pi) - np.pi\n       \
      \     outputs[i] = out\n            errors[i] = error\n        return len(outputs)\n"
    affinity: ''
    alias: ''
    bw: 2*np.pi/variable0
    comment: ''
    const: const
    damp: 1*variable1
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Decision Directed PLL', 'blk', [('bw', '0.0628'), ('damp', '1.0'),
      ('const', '<gnuradio.digital.digital_python.constellation_bpsk object at 0x000002AB0B5907F0>')],
      [('0', 'complex', 1)], [('0', 'complex', 1), ('1', 'float', 1)], '\n    Decision
      Directed PLL - Decision Directed based carrier recovery pll\n\n    Parameters:\n        bw
      - Loop Bandwith (default = 2*pi/100)\n        damp - Loop Damping (default =
      1.0)\n        const - Slicer Constellation (default = BPSK)\n    ', ['bw', 'damp'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [328, 424.0]
    rotation: 180
    state: enabled
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import numpy as np
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [392, 8.0]
    rotation: 0
    state: true
- name: qtgui_const_sink_x_0
  id: qtgui_const_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: '"blue"'
    color10: '"red"'
    color2: '"red"'
    color3: '"red"'
    color4: '"red"'
    color5: '"red"'
    color6: '"red"'
    color7: '"red"'
    color8: '"red"'
    color9: '"red"'
    comment: ''
    grid: 'False'
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '0'
    marker10: '0'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '0'
    marker6: '0'
    marker7: '0'
    marker8: '0'
    marker9: '0'
    name: '""'
    nconnections: '1'
    size: '1024'
    style1: '0'
    style10: '0'
    style2: '0'
    style3: '0'
    style4: '0'
    style5: '0'
    style6: '0'
    style7: '0'
    style8: '0'
    style9: '0'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '2'
    xmin: '-2'
    ymax: '2'
    ymin: '-2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [104, 416.0]
    rotation: 180
    state: enabled
- name: qtgui_sink_x_0
  id: qtgui_sink_x
  parameters:
    affinity: ''
    alias: ''
    bw: samp_rate
    comment: ''
    fc: '0'
    fftsize: '1024'
    gui_hint: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    plotconst: 'True'
    plotfreq: 'True'
    plottime: 'True'
    plotwaterfall: 'True'
    rate: '10'
    showports: 'False'
    showrf: 'False'
    type: complex
    wintype: window.WIN_BLACKMAN_hARRIS
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1056, 304.0]
    rotation: 0
    state: enabled
- name: root_raised_cosine_filter_0
  id: root_raised_cosine_filter
  parameters:
    affinity: ''
    alias: ''
    alpha: '0.5'
    comment: ''
    decim: '1'
    gain: '1'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    ntaps: 11*sps
    samp_rate: sps
    sym_rate: '1'
    type: fir_filter_ccf
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [816, 448.0]
    rotation: 180
    state: true

connections:
- [analog_random_source_x_0, '0', digital_constellation_modulator_0, '0']
- [blocks_throttle_0, '0', channels_channel_model_0, '0']
- [channels_channel_model_0, '0', qtgui_sink_x_0, '0']
- [channels_channel_model_0, '0', root_raised_cosine_filter_0, '0']
- [digital_constellation_modulator_0, '0', blocks_throttle_0, '0']
- [digital_symbol_sync_xx_0, '0', epy_block_0, '0']
- [epy_block_0, '0', qtgui_const_sink_x_0, '0']
- [epy_block_0, '1', blocks_null_sink_0, '0']
- [root_raised_cosine_filter_0, '0', digital_symbol_sync_xx_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.5.1
